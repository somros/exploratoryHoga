{
    "collab_server" : "",
    "contents" : "# 12.08.2016 Alberto.Rovellini@vuw.ac.nz \n# script to follow the fate of sponges within a quadrat\n\nrequire(abind)\nrequire(plyr)\nrequire(ggplot2)\nrequire(reshape2)\n\ndataAllYears <- read.csv(\"//Staff/Home/SCIFAC/rovellal/DocumentsRedir/Data/Hoga/buoy3/spongeAbundanceQuadrats.csv\")\n\n# initiate information about the dataset  \n\nspecies <- read.csv(\"//Staff/Home/SCIFAC/rovellal/DocumentsRedir/Data/Hoga/buoy3/speciesKey.csv\")\nspecies[species==\"\" | species==0] <- NA # drop all that is not a name, to be refined though\n\n# option 1: keep only the species (or at least what is close)\n\nidentified <- species[,-ncol(species)]\nidentified <- identified[complete.cases(identified),]\n\n# option 2: use species when available and description otherwise\n\nspeciesOrDescription <- list()\n\nfor (i in 1:nrow(species)) {\n  if (is.na(species[,2][i])==T) {\n    speciesOrDescription[[i]] <- species[,3][i]\n  } else {\n    speciesOrDescription[[i]] <- species[,2][i]\n  }\n}\nspeciesOrDescription <- unlist(speciesOrDescription) #\n\n# follows general information about the dataset, such as number of years, quadrats, sites and so on\n\nyears <- levels(factor(substr(names(dataAllYears[-1]),2,3)))\nquadrats <- as.numeric(levels(factor(substr(names(dataAllYears), nchar(names(dataAllYears)), nchar(names(dataAllYears))))))\nquadrats <- quadrats[is.na(quadrats)==F]# number of quadrats per site\ndataColumns <- ncol(dataAllYears)-1 # number of quadrats in all sites in all years, effectivelty number of columns in the frame\nsites <- c(\"A\", \"B\", \"C\")\n\n# each data column is a quadrat. There are five quadrats per site. first letter of the header is X because \n# read.csv() (and read.table() for that matter) do not allow a column name to start wit a number. \n# first 2 digits after X are the year (05 to 16). S is site, and second to last letter (A, B or C) is the site code.\n# final digit is the quadrat within the site.\n\n\n# all the columns need to be turned to numeric. some typos in the excel spreadsheet might cause the columns to be\n# factors or characters. as the method removes everything that cannot be coerced to numeric, typos such as \"19'\"\n# will also be dropped, hence it's recommended to take a look at the data first.\n# in an ideal world I will adapt the script to skim through typos the right way\n\n# cut the whole thing to the first 125 rows, as below that it gets confused\n\ndataAllYears <- dataAllYears[1:124,]\n\n# gets rid of zeros as characters in the datasets\n\nfor (i in 1:ncol(dataAllYears)) {\n  if (is.numeric(dataAllYears[,i])==T) {\n    dataAllYears[,i] <- dataAllYears[,i]\n  } else {\n    dataAllYears[,i] <- as.numeric(levels(dataAllYears[,i])[dataAllYears[,i]]) # this removes everything that won't fit as numeric\n  }\n}\n\ndataAllYears[is.na(dataAllYears)] <- 0 # turns NAs to zeroes\n\n# gets rid of the X in front of the column names because it bothers me. but then again it puts it back\n\ncolnames(dataAllYears) <- c(names(dataAllYears)[1],\n                            substr(names(dataAllYears[,-1]), 2, nchar(names(dataAllYears[,-1]))))\n\ndataAllYears$Species <- speciesOrDescription\n\n# literally about transposing the dataframe here, nothing more. \n\ntransDatatmp <- as.data.frame(t(dataAllYears))\ntransDatatmp <- transDatatmp[-1,] # gets rid of the line with the species IDs\n\n# need to turn it back to numeric because it all beccame factor in the meantime\n\ntransData <- as.data.frame(apply(transDatatmp, 2, function(x) as.numeric(as.character(x))))\n\nrownames(transData) <- rownames(transDatatmp)\n\n########################################################################################\n\n# polish it and write it out as .csv file for Shane\n\n# shaneData <- transData\n# rownames(shaneData) <- 1:nrow(shaneData)\n# shaneData <- shaneData[,c(((length(shaneData)-3):length(shaneData)), (length(shaneData)-4),\n#                           1:(length(shaneData)-5))]\n# write.csv(shaneData, \"/home/somros/Documents/R/exploratoryHoga/output/buoy3_Data.csv\")\n\n# totally useless as the species are not grouped, start from the other script instead\n\n#########################################################################################\n\ntransData$Total <- rowSums(transData)\n\n# need to separate years (my x variable) and quadrats\n\nquadratID <- rownames(transData)\ntransData$Year <- as.numeric(substr(quadratID, 1, 2))\ntransData$Site <- substr(quadratID, nchar(quadratID)-1, nchar(quadratID)-1)\ntransData$Quadrat <- substr(quadratID, nchar(quadratID), nchar(quadratID))  \ntransData$QuadratSite <- substr(quadratID, nchar(quadratID)-1, nchar(quadratID))\n\n# restrict to small data frame with only the total numbers and the quadrats IDs\n\nsmallFrame <- transData[,125:129]\n\nlibrary(RColorBrewer)\npar(mar = c(0, 4, 0, 0))\ndisplay.brewer.all()\nnOfColorsQuad <- 5 # numer of quadrats\ngetPaletteQuad <- colorRampPalette(brewer.pal(5, \"Set1\"))\n\nquadratsFate <- ggplot(data = smallFrame, aes(x = Year, y = Total, group = QuadratSite, color = Quadrat))+\n  geom_line(aes(color = Quadrat), size = .6)+\n  geom_point()+\n  scale_color_manual(values = getPaletteQuad(nOfColorsQuad))+\n  scale_x_continuous(breaks = seq(5,16,1),\n                     labels = seq(5,16,1),\n                     limits = c(5,16))+\n  scale_y_continuous(limits = c(0,350),\n                     breaks = seq(0,350,50))+\n  labs(y=expression(paste(Sponge~density~(n~m^2))))+\n  theme_bw()+\n  theme(panel.grid.minor = element_blank(), \n        panel.grid.major = element_blank())+\n  theme(plot.title = element_text(size=14, vjust=2))+\n  theme(axis.title.x = element_text(size=10,vjust=-0.5),\n        axis.title.y = element_text(size=10,vjust=0.5))+\n  theme(axis.text.x=element_text(size=10, angle = 60, \n                                 hjust = 1, vjust = .9))+\n  theme(axis.text.y=element_text(size=10))+\n  facet_grid(. ~ Site, scales = \"free\")\nquadratsFate\n\n# ggsave(\"/home/somros/Documents/R/exploratoryHoga/output/pics/quadratsFate.pdf\", quadratsFate,\n#        width=7, height=3.5, useDingbats=T)\n\n# next thing to explore is the variability within and between sites\n\n# geom_stat uses the predict routine using by default the LOESS method (LOcal regrESSion)\n# which is a point-wise regression method. Note that the line is NOT an average. The \n# shaded area is 95% point-wise confidence interval\n\nquadratsFateSmooth <- ggplot(data = smallFrame, aes(x = Year, y = Total))+\n  geom_smooth()+\n  geom_point(aes(shape = Quadrat))+\n  scale_color_manual(values = getPaletteQuad(nOfColorsQuad))+\n  scale_x_continuous(breaks = seq(5,16,1),\n                     labels = seq(5,16,1),\n                     limits = c(5,16))+\n  scale_y_continuous(limits = c(0,350),\n                     breaks = seq(0,350,50))+\n  labs(y=expression(paste(Sponge~density~(n~m^2))))+\n  theme_bw()+\n  theme(panel.grid.minor = element_blank(), \n        panel.grid.major = element_blank())+\n  theme(plot.title = element_text(size=14, vjust=2))+\n  theme(axis.title.x = element_text(size=10,vjust=-0.5),\n        axis.title.y = element_text(size=10,vjust=0.5))+\n  theme(axis.text.x=element_text(size=10, angle = 60, \n                                 hjust = 1, vjust = .9))+\n  theme(axis.text.y=element_text(size=10))+\n  facet_grid(. ~ Site, scales = \"free\")\nquadratsFateSmooth\n\n# ggsave(\"/home/somros/Documents/R/exploratoryHoga/output/pics/quadratsVariability.pdf\", quadratsFateSmooth,\n#         width=7, height=3.5, useDingbats=T)\n\n# # summary stats. divide per year first\n# \n# byYear <- split(smallFrame, smallFrame$Year)\n# siteAveragesPerYear <- lapply(byYear, function(x) {\n#   listOfLists <- split(x, x$Site)\n#   meanSitesTmp <- lapply(listOfLists, function(y) {\n#     meanY <- mean(y$Total)\n#     sdY <- sd(y$Total)\n#     frameToReturn <- data.frame(levels(factor(y$Year)), \n#                                    levels(factor(y$Site)), meanY, sdY)\n#     return(frameToReturn)\n#   })\n#   meanSites <- as.data.frame(abind(meanSitesTmp, along = 0))\n#   return(meanSites)\n# })\n# \n# head(siteAveragesPerYear[[1]])\n# \n# \n# \n# head(smallFrame)\n\n\n# plot number(y+1) as function of number(y). this is actually meaningless as there are 2 gaps of 1\n# year\n\nhead(smallFrame)\n\nsmallFrame$TotalNextYear <- c(smallFrame$Total[(smallFrame$Year != 5)], \n                              rep(NA, nrow(smallFrame[smallFrame$Year == 5,])))\n\nspongesInTime <- ggplot(data = smallFrame, \n                        aes(x = Total, y = TotalNextYear, group = Quadrat))+\n  geom_point(aes(color = Quadrat))+\n  scale_color_manual(values = getPaletteQuad(nOfColorsQuad))+\n  scale_x_continuous(breaks = seq(50,300,50),\n                     labels = seq(50,300,50),\n                     limits = c(50,300))+\n  scale_y_continuous(limits = c(50,300),\n                     breaks = seq(50,300,50))+\n  labs(x=\"D(t)\", y=\"D(t+1)\")+\n  #geom_smooth(method = \"lm\")+\n  theme_bw()+\n  theme(panel.grid.minor = element_blank(), \n        panel.grid.major = element_blank())+\n  theme(plot.title = element_text(size=14, vjust=2))+\n  theme(axis.title.x = element_text(size=10,vjust=-0.5),\n        axis.title.y = element_text(size=10,vjust=0.5))+\n  theme(axis.text.x=element_text(size=10, vjust = .9))+\n  theme(axis.text.y=element_text(size=10))+\n  facet_grid(. ~ Site)\nspongesInTime\n\nggsave(\"/home/somros/Documents/R/exploratoryHoga/output/pics/prediction.pdf\", spongesInTime,\n       width=7, height=2.8, useDingbats=T)\n\n",
    "created" : 1476245021544.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3153557656",
    "id" : "81284A28",
    "lastKnownWriteTime" : 1476848407,
    "last_content_update" : 1476848407301,
    "path" : "//staff/Home/SCIFAC/rovellal/DocumentsRedir/rProjects/hoga/exploratoryHoga/trunk/buoy3QuadratsFate.R",
    "project_path" : "buoy3QuadratsFate.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}