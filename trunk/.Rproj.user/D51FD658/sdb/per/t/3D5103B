{
    "collab_server" : "",
    "contents" : "# 17/10/2016 script for MDS analysis on the Buoy 3 data. ONe of tw twin scripts for the moment, one\n# for across year comparison of the same site and one for across sites comparison of the same year. \n\n\nrequire(abind)\nrequire(MASS)\nrequire(ggplot2)\nrequire(BiodiversityR)\n\n\nsetwd(\"//Staff/Home/SCIFAC/rovellal/DocumentsRedir/Data/Hoga/buoy3\")\nmyData <- read.csv(\"spongeAbundanceQuadrats.csv\")\n\n# turn to numeric immediately\n\nmyData <- myData[c(1:127),]\nmyData <- apply(myData, 2, as.numeric)\nmyData[is.na(myData)] <- 0 # turns NAs in 0, as necessary for Bray-Curtis\n\n\n# some steps to break down the frame in a list of frames, one per year per site.\n\nnOfQuadrats <- 5\n\n\n\n# TODO: introduce routine to cut data frames to the species accounting for 90% of the abundance. must be applied\n# to each quadrat and then all the species considered make the subset key for the entire data frame\n\n# we do it with apply. jk lol use a loop apply is slow af anyway\n\nperc <- 90\n\nspecies <- vector(\"list\", length = ncol(myData)-1)\n\nfor (k in 2:ncol(myData)) {\n  dataOrd <- myData[order(myData[,k], decreasing = T),]\n  # does the math: sum all the entries in one column to get the total\n  totNum <- sum(dataOrd[,k])\n  n <- totNum*perc/100\n  ntmp <- 0\n  spy <- 0\n  for (i in 1:nrow(dataOrd)) {\n    if (ntmp < n) {\n      ntmp <- ntmp + dataOrd[i,k]\n      spy <- i\n    } else {\n      ntmp <- ntmp\n      spy <- spy\n    }\n  }\n  species[[k]] <- dataOrd[c(1:spy),1]\n}\n\nspecies <- factor(levels(factor(unlist(species))))\n\n# now subset original data\n\nsubsetData <- myData[myData[,1] %in% species,] # there we go\n\n\n# if for whatever reason we want to use the entire set of species for the analysis, we can get rid of the above\n# section (this should become a flag). \n# the above routine may be better off if used on the means. That would rule out all the outliers from the\n# single quadrats. The number of species is however half the original amount.\n\n\ndataQuad <- subsetData[,-1] # remove species for convenience\n\n\n# create vector of indeces for consequent loop (breakage)\n\nindeces <- rep(1:30, each = 5)\n\ndataQuadN <- rbind(indeces, dataQuad)\n\n# split into list depending on the index\n\nnewList <- vector(mode = \"list\", length = length(indeces)/nOfQuadrats)\n\nfor (i in 1:length(newList)) {\n  subsetFrame <- dataQuadN[1,]==i\n  newList[[i]] <- dataQuadN[,subsetFrame]\n}\n\n\n\n\n# get rid of the index and make row means (sd later)\n\nnewListMeans <- lapply(newList, function(x) {\n  y <- x[-1,]\n  z <- rowMeans(y)\n  frame <- as.data.frame(z[1:nrow(dataQuad)])\n  colnames(frame) <- paste(\"Mean\", substr(names(x[1,])[1], 2,3), substr(names(x[1,])[1], 5, 5), sep = \"\")\n  return(frame)\n})\n\n\nallMeans <- as.data.frame(abind(newListMeans, along = 2))\n\n# transform in log(x+1). we can debate wether we want to have this done here or earlier. as a rule of thumb,\n# the earlier the better. Need to investigate the sensitivity to this of the MDS plot though, prepare 2 versions\n\n\nallMeansTrans <- log10(allMeans+1)\n\n# now get a list out of this, each element of a list is a time series with the means for a site. One element per site\n# i.e. 3 elements\n\nsites <- levels(factor(unlist(lapply(names(allMeansTrans), function(x) substr(x, nchar(x), nchar(x))))))\n\nsitesList <- vector(mode = \"list\", length = length(sites))\n\n\nfor(i in sites) {\n  sitesList[[match(i, sites)]] <- allMeansTrans[,grepl(i, names(allMeansTrans))]\n}\n\n# now the similarity index must be calculated\n\nmatrixList <- list()\n\nfor (s in 1:length(sitesList)) {\n  \n  S <- sitesList[[s]]\n  \n  grandBC <- list()\n  \n  for (i in 1:length(S)) {\n    BC <- vector(mode = \"logical\", length = length(S))\n    for (j in 1:length(S)) {\n      reduced <- S[,c(i,j)]\n      BCpartial <- apply(reduced, 1, function(x) {\n        numBC <- 2*min(x[1], x[2])\n        denBC <- x[1]+x[2]\n        metrics <- c(numBC, denBC)\n      })\n      BC[j] <- rowSums(BCpartial)[1]/rowSums(BCpartial)[2]\n    }\n    grandBC[[i]] <- BC\n  } # minchia che culo\n  \n  kekes <- abind(grandBC, along = 0)\n  colnames(kekes) <- names(S)\n  rownames(kekes) <- names(kekes)\n  matrixList[[s]] <- kekes\n}\n\n\n# now MDS plots how the hell do they work\n\n# turn into bloody dissimilarity\n\ndissList <- lapply(matrixList, function(x) 1-x)\n\nfitList <- lapply(dissList, function(x) {\n  fit <- isoMDS(x, k = 2) # in case of metric MDS just swap isoMDS() with cmdscale() and remove $points below (flag this)\n  y <- fit$points[,1]\n  z <- fit$points[,2]\n  yzFrame <- data.frame(y,z)\n  yzFrame$Names <- names(x[1,])\n  return(yzFrame)\n}\n)\n\n\nplot(fitList[[3]][,1], fitList[[3]][,2], xlab=\"Coordinate 1\", ylab=\"Coordinate 2\", \n     main=\"Nonmetric MDS\", type=\"n\")\ntext(fitList[[3]][,1], fitList[[3]][,2], labels = names(dissList[[1]][1,]), cex=.7)\n\n# please turn this to ggplot for the sake of decency\n\nallFrames <- as.data.frame(abind(fitList, along = 1))\nallFrames$y <- as.numeric(as.character(allFrames$y))\nallFrames$z <- as.numeric(as.character(allFrames$z))\nallFrames$Names <- as.character(allFrames$Names) # for substr\nallFrames$Site <- rep(sites, each = 10)\n# add year for colour key\n\nallFrames$Year <- rep(NA, nrow(allFrames))\n\nfor (i in 1:nrow(allFrames)) {\n  allFrames$Year[i] <- paste(\"20\", substr(allFrames$Names[i], \n                                          (nchar(allFrames$Names[i])-2), \n                                          (nchar(allFrames$Names[i])-1)),\n                             sep = \"\")\n}\n\n# plot\n\nMDSplotYears <- ggplot(data = allFrames, aes(x = y, y = z, group = Site, color = Year))+\n  geom_hline(yintercept = 0)+\n  geom_vline(xintercept = 0)+\n  geom_text(aes(label = Year, color = Year), size = 4.5, fontface = \"bold\")+\n  geom_path(size = 1)+\n  scale_x_continuous(limits = c(-.25,.25))+\n  scale_y_continuous(limits = c(-.25,.25))+\n  theme_bw()+\n  facet_grid(.~Site)\nMDSplotYears\n\n# ggsave(\"//Staff/Home/SCIFAC/rovellal/DocumentsRedir/Wellington/words/latex/hogaExploratory/Pics/MDSYears.pdf\",\n#        MDSplotYears, useDingbats = T) \n\n\n\n\n# CAP uses a dedicated package and starts from the species list\n#\n\n\n",
    "created" : 1476397221673.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2325251349",
    "id" : "3D5103B",
    "lastKnownWriteTime" : 1477371843,
    "last_content_update" : 1477371843063,
    "path" : "//staff/Home/SCIFAC/rovellal/DocumentsRedir/rProjects/hoga/exploratoryHoga/trunk/MDS.R",
    "project_path" : "MDS.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}