{
    "collab_server" : "",
    "contents" : "# 12.08.2016 Alberto.Rovellini@vuw.ac.nz\n# script to plot the SST data from Coral Reef Watch (NOAA), from 2001 to 2016.\n# selected station is Wakatobi (see http://coralreefwatch.noaa.gov/satellite/vs/docs/list_vs_group_latlon_201103.php)\n# for information about the dataset, see \"description.txt\", or also http://coralreefwatch.noaa.gov/satellite/data_nrt/descriptions/timeseries.txt\n\nrequire(ggplot2)\nrequire(abind)\nrequire(plyr)\nrequire(lubridate)\n\ndataSet <- read.table(\"//Staff/Home/SCIFAC/rovellal/DocumentsRedir/Data/Hoga/buoy3/wakatobi_SST.txt\", \n                      header = T, sep = \"\", dec = \".\")\ndays <- seq(as.Date(\"2000/11/28\"), as.Date(\"2016/08/18\"), \"days\")\njulianDays <- yday(days)\n\n\n# create a new column in the data set with the correct format of the days to match with progs\nmyDays <- list()\nfor (i in 1:nrow(dataSet)) {\nmyDays[[i]] <- paste(dataSet$BYYY[i],\n                if (nchar(dataSet$BM[i]) == 2) {\n                  dataSet$BM[i]\n                } else {\n                  paste(\"0\", dataSet$BM[i], sep = \"\")\n                }, \n                if (nchar(dataSet$BD[i]) == 2) {\n                  dataSet$BD[i]\n                } else {\n                  paste(\"0\", dataSet$BD[i], sep = \"\")\n                } , sep = \"-\")\n}\n\nmyDays <- unlist(myDays)\n\n# now need to associate the progressive number of the days to my dataSet\n# could use match from column of data frame to vector of dates to see the position apparently\n\nindexDay <- match(myDays, as.character(days))\n\n# now extract from the julianDays vector the elements indexed according to indexDay\n\njulians <- julianDays[indexDay]\ntrueDates <- as.Date(days[indexDay])\n\ndataSet$Julian <- julians\ndataSet$Date <- trueDates\n\n\n#####################################################\n# non-averaged plot section\n\nmyYears <- 2005:2016\nmonths <- c(\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\")\nyearsOfInterest <- dataSet[dataSet$BYYY %in% myYears,]\n\nallTemp <- ggplot(data = yearsOfInterest, \n                  aes(x=Julian, y=SST, group = BYYY))+\n  geom_line()+\n  scale_x_continuous(breaks = seq(15, 365, 30),\n                     labels = 1:12)+\n  labs(y = \"SST (°C)\", x = \"Month\")+\n  theme_bw()+\n  theme(panel.grid.minor = element_blank())+\n  theme(plot.title = element_text(size=14, vjust=2))+\n  theme(axis.title.x = element_text(size=10,vjust=-0.5),\n        axis.title.y = element_text(size=10,vjust=0.5))+\n  theme(axis.text.x=element_text(size=10))+\n  theme(axis.text.y=element_text(size=10))+\n  facet_wrap(~ BYYY)\nallTemp\n\n# plot anomalies\n# anomalies are calculated as recorded SST - daily climatology. for incormation about the calculation\n# of the latter, refer to http://coralreefwatch.noaa.gov/satellite/methodology/methodology.php#clim\n\nanomalies <- ggplot(data = yearsOfInterest,\n                    aes(x = Julian, y = SSTANOM))+\n  geom_line()+\n  geom_hline(yintercept=0, col=\"red\")+\n  scale_x_continuous(breaks = seq(15, 365, 30),\n                     labels = months)+ # approximation to visualise\n  facet_wrap(~ BYYY)\nanomalies\n  \n# plot proper time series\n\n\nts <- ggplot(data = yearsOfInterest,\n             aes(x = Date, y = SST))+\n  geom_line()+\n  scale_y_continuous(limits = c(15, 35))\nts\n\n\n# high resolution, sampled every 3 days. can take monthly means and look for trends during time maybe\n# (don't expect to see any actually)\n# might actually want to use a oneliner instead of the split-apply-combine\n# data from Hoga come from the same season each year, but it makes no sense to compare with\n# mean values for that time because there is certainly a delay, assuming that there is an\n# effect at all. So how do we detect it if it's there? Where to look?\n\n# guess I have to work with monthly averages at the very least\n\nmonthListTmp <- split(dataSet, list(factor(dataSet$BM), factor(dataSet$BYYY)))\nmonthListTmp1 <- monthListTmp[-(1:10)]\nmonthList <- monthListTmp1[(length(monthListTmp1)-4:length(monthListTmp1))] # what the fuck\nmonthlyMeans <- lapply(monthList, function(x) {\n  meanSST <- mean(x$SST)\n  sdSST <- sd(x$SST)\n  frameOfMeans <- data.frame(levels(factor(x$BYYY)), levels(factor(x$BM)),\n                             meanSST, sdSST)\n  return(frameOfMeans)\n})\n\ntimeSeries <- as.data.frame(abind(monthlyMeans, along = 0))\ncolnames(timeSeries) <- c(\"Year\", \"Month\", \"Mean\", \"SD\")\ntimeSeries <- as.data.frame(apply(timeSeries, 2, function(x) as.numeric(as.character(x))))\n\n# set years of interest\n\nmyYears <- 2005:2016\n\nmeanSSTYears <- ggplot(data = timeSeries[timeSeries$Year %in% myYears,], \n               aes(x = Month, y = Mean))+\n  geom_line(colour = \"red\")+\n  scale_x_continuous(limits = c(1,12),\n                     breaks = 1:12)+\n  labs(y = \"Mean monthly temperature (° C)\")+\n  theme_bw()+\n  theme(panel.grid.minor = element_blank())+\n  theme(plot.title = element_text(size=14, vjust=2))+\n  theme(axis.title.x = element_text(size=10,vjust=-0.5),\n        axis.title.y = element_text(size=10,vjust=0.5))+\n  theme(axis.text.x=element_text(size=10, hjust = 1, vjust = .9))+\n  theme(axis.text.y=element_text(size=10))+\n  facet_wrap( ~ Year, ncol = 2)\nmeanSSTYears\n\n# ggsave(\"/home/somros/Documents/R/exploratoryHoga/output/pics/meanSSTYears.pdf\",\n#        meanSSTYears, width=6, height=9, useDingbats=T)\n\n\n# plot the monthly means over time\n\nmonthlyMeanInTime <- ggplot(data = timeSeries[timeSeries$Year %in% myYears,],\n                            aes(x = Year, y = Mean))+\n  geom_line()+\n  facet_wrap(~ Month)\nmonthlyMeanInTime\n\n\n# get climatology for Dec-Jan-Feb-Mar. \n\nmyYears <- 2004:2016\nmyMonths <- c(12,1:3)\n\ndataSST <- dataSet[dataSet$BYYY %in% myYears,]\ndataSST <- dataSST[dataSST$BM %in%  myMonths,]\n\n# do it in excel, I'll come back to this later if the results encourage it\n\n# write.csv(dataSST, \"//Staff/Home/SCIFAC/rovellal/DocumentsRedir/Data/Hoga/buoy3/SST.csv\")\ndataSST <- read.csv(\"//Staff/Home/SCIFAC/rovellal/DocumentsRedir/Data/Hoga/buoy3/SST.csv\")\n\ndataSplit <- split(dataSST, dataSST$Clim)\ndataLapply <- lapply(dataSplit, function(x) mean(x$SST))\ndataCombined <- cbind(myYears[-1], unlist(dataLapply))\ndataCombined <- dataCombined[-c(6,8),]\nwrite.csv(dataCombined, \"//Staff/Home/SCIFAC/rovellal/DocumentsRedir/Data/Hoga/buoy3/cheat.csv\")\n\n\n\n# SOI\n\ndataSOI <- read.table(\"//Staff/Home/SCIFAC/rovellal/DocumentsRedir/Data/Hoga/buoy3/SOI.txt\", header = T, sep = \",\")\ndataSOI$Year <- substr(dataSOI$Date, 1, nchar(dataSOI$Date)-2)\ndataSOI$Month <- substr(dataSOI$Date, nchar(dataSOI$Date)-1, nchar(dataSOI$Date))\nmySOI <- dataSOI[dataSOI$Year %in% myYears,]\nmySOI$Month <- as.numeric(as.character(mySOI$Month))\nmySOI <- mySOI[mySOI$Month %in% myMonths,]\nmySOI <- mySOI[-(1:3),]\nmySOI$Index <- rep(1:(length(levels(factor(mySOI$Year)))-1), each = 4)\nsplitSOI <- split(mySOI, mySOI$Index)\nlapplySOI <- lapply(splitSOI, function(x) mean(x$Value))\nmeanSOI <- cbind(rep(myYears[-1], each = 3), rep(unlist(lapplySOI), each = 3))\nmeanSOI <- meanSOI[meanSOI[,1] != 2010 & meanSOI[,1] != 2012,]\nwrite.csv(meanSOI, \"//Staff/Home/SCIFAC/rovellal/DocumentsRedir/Data/Hoga/buoy3/cheatSOI.csv\")\n\n\n\n\n\n\n",
    "created" : 1478738185572.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "287174590",
    "id" : "513A7CCE",
    "lastKnownWriteTime" : 1478830007,
    "last_content_update" : 1478830007073,
    "path" : "//staff/Home/SCIFAC/rovellal/DocumentsRedir/rProjects/hoga/exploratoryHoga/trunk/sstPlotter.R",
    "project_path" : "sstPlotter.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}